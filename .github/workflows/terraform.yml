name: terraform

on:
  workflow_call:
    inputs:
      apply_changes:
        required: false
        default: false
        type: boolean
      fail-if-different:
        required: false
        default: false
        type: boolean
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  run:
    name: ${{ inputs.apply_changes && 'apply' || 'plan' }}
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache installed terraform providers
        uses: actions/cache@v3
        with:
          path: terraform/.terraform
          key: v1-${{ hashFiles('terraform/.terraform.lock.hcl') }}

      - name: Initialize terraform
        run: docker compose run terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Plan infrastructure changes
        if: "!inputs.fail-if-different"
        run: docker compose run terraform plan -out planned -lock=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Plan infrastructure changes and fail if drift detected
        if: inputs.fail-if-different
        run: docker compose run terraform plan -out planned -detailed-exitcode
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Apply infrastructure changes
        if: inputs.apply_changes
        run: docker compose run terraform apply planned
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
